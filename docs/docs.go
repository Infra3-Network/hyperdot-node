// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/query": {
            "get": {
                "description": "list query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "list query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time_range",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "update query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "update query",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.QueryModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.Response"
                        }
                    }
                }
            }
        },
        "/query/:id": {
            "get": {
                "description": "get query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "get query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "delete query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "delete query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "query id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/browse": {
            "get": {
                "description": "list browse query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "list browse query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time_range",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/chart": {
            "post": {
                "description": "create query chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "create query chart",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.QueryModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.Response"
                        }
                    }
                }
            }
        },
        "/query/chart/:id": {
            "get": {
                "description": "get current logined user query chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "get current logined user query chart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chart id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "delete": {
                "description": "delete query chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "delete query chart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chart id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/chart/:id/user/:userId": {
            "get": {
                "description": "get user query chart",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "get user query chart",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "chart id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/charts": {
            "get": {
                "description": "list current logined user charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "list current logined user charts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time_range",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/charts/user/:userId": {
            "get": {
                "description": "list user charts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "list user charts",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "userId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time_range",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/favorite": {
            "get": {
                "description": "list favorite query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "list favorite query",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "page_size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "time_range",
                        "name": "time_range",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order",
                        "name": "order",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "put": {
                "description": "user favorite query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "user favorite query",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.UserQueryFavorites"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/query/run": {
            "get": {
                "description": "run query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "run query",
                "parameters": [
                    {
                        "type": "string",
                        "description": "q",
                        "name": "query",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "engine",
                        "name": "engine",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/query.ResponseRun"
                        }
                    }
                }
            }
        },
        "/query/unfavorite": {
            "put": {
                "description": "user unfavorite query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query apis"
                ],
                "summary": "user unfavorite query",
                "parameters": [
                    {
                        "description": "body",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.UserQueryFavorites"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the current logined user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Get the current logined user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseGetUser"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Update user info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.UserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseUpdateUser"
                        }
                    }
                }
            }
        },
        "/user/auth/createAccount": {
            "post": {
                "description": "Create account by username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Create account by username and password.",
                "parameters": [
                    {
                        "description": "create account request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestCreateAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseCreateAccount"
                        }
                    }
                }
            }
        },
        "/user/auth/login": {
            "post": {
                "description": "Login by username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Login by username and password.",
                "parameters": [
                    {
                        "description": "login request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseLogin"
                        }
                    }
                }
            }
        },
        "/user/avatar": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user avatar.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "image/jpeg"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Get user avatar.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/user/avatar/upload": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Upload user avatar.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Upload user avatar.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "avatar file",
                        "name": "avatar",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseUploadAvatar"
                        }
                    }
                }
            }
        },
        "/user/email": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user email.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Update user email.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update email request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestUpdateEmail"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseUpdateUser"
                        }
                    }
                }
            }
        },
        "/user/password": {
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Update user password.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update password request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestUpdatePassword"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseUpdateUser"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Get user by id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseGetUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dataengine.FieldSchema": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "A description of the field. The maximum length is 16,384 characters.",
                    "type": "string"
                },
                "name": {
                    "description": "The field name.\nMust contain only letters (a-z, A-Z), numbers (0-9), or underscores (_),\nand must start with a letter or underscore.\nThe maximum length is 128 characters.",
                    "type": "string"
                },
                "repeated": {
                    "description": "Whether the field may contain multiple values.",
                    "type": "boolean"
                },
                "required": {
                    "description": "Whether the field is required.  Ignored if Repeated is true.",
                    "type": "boolean"
                },
                "type": {
                    "description": "The field data type.  If Type is Record, then this field contains a nested schema,\nwhich is described by Schema.",
                    "type": "string"
                }
            }
        },
        "datamodel.ChartModel": {
            "type": "object",
            "properties": {
                "closeable": {
                    "type": "boolean"
                },
                "config": {
                    "$ref": "#/definitions/datamodel.JSON"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "query_id": {
                    "type": "integer"
                },
                "type": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "datamodel.JSON": {
            "type": "object",
            "additionalProperties": true
        },
        "datamodel.QueryModel": {
            "type": "object",
            "properties": {
                "charts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datamodel.ChartModel"
                    }
                },
                "created_At": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "is_privacy": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "type": "string"
                },
                "query_engine": {
                    "type": "string"
                },
                "stars": {
                    "type": "integer"
                },
                "unsaved": {
                    "type": "boolean"
                },
                "updated_At": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "datamodel.UserModel": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datamodel.UserSignLog"
                    }
                },
                "provider": {
                    "type": "string"
                },
                "sign_in_count": {
                    "type": "integer"
                },
                "telgram": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "datamodel.UserQueryFavorites": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "query_id": {
                    "type": "integer"
                },
                "query_user_id": {
                    "type": "integer"
                },
                "stared": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "datamodel.UserSignLog": {
            "type": "object",
            "properties": {
                "at": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "query.Response": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/datamodel.QueryModel"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "query.ResponseRun": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/query.ResponseRunData"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "query.ResponseRunData": {
            "type": "object",
            "properties": {
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "schemas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dataengine.FieldSchema"
                    }
                }
            }
        },
        "user.RequestCreateAccount": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.RequestLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "user.RequestUpdateEmail": {
            "type": "object",
            "properties": {
                "new_email": {
                    "type": "string"
                }
            }
        },
        "user.RequestUpdatePassword": {
            "type": "object",
            "properties": {
                "current_password": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "user.ResponseCreateAccount": {
            "type": "object"
        },
        "user.ResponseGetUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.ResponseGetUserData"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.ResponseGetUserData": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dashboards": {
                    "type": "integer"
                },
                "discord": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encrypted_password": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "queries": {
                    "type": "integer"
                },
                "stars": {
                    "type": "integer"
                },
                "telgram": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.ResponseLogin": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.ResponseUpdateUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/datamodel.UserModel"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.ResponseUploadAvatar": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.ResponseUploadAvatarData"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.ResponseUploadAvatarData": {
            "type": "object",
            "properties": {
                "filesize": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
