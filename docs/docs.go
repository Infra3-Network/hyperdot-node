// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/apis/v1/query/run": {
            "post": {
                "description": "run query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "run query",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "QueryRunResponseData"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get the current logined user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Get the current logined user.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseGetUser"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update user info.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Update user info.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "update user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datamodel.UserModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseUpdateUser"
                        }
                    }
                }
            }
        },
        "/user/auth/createAccount": {
            "post": {
                "description": "Create account by username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Create account by username and password.",
                "parameters": [
                    {
                        "description": "create account request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestCreateAccount"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseCreateAccount"
                        }
                    }
                }
            }
        },
        "/user/auth/login": {
            "post": {
                "description": "Login by username and password.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Login by username and password.",
                "parameters": [
                    {
                        "description": "login request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.RequestLogin"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseLogin"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get user by id.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user apis"
                ],
                "summary": "Get user by id.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/user.ResponseGetUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "datamodel.UserModel": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "discord": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "log": {
                    "type": "string"
                },
                "logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/datamodel.UserSignLog"
                    }
                },
                "provider": {
                    "type": "string"
                },
                "sign_in_count": {
                    "type": "integer"
                },
                "telgram": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "datamodel.UserSignLog": {
            "type": "object",
            "properties": {
                "at": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "user_agent": {
                    "type": "string"
                }
            }
        },
        "user.RequestCreateAccount": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.RequestLogin": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "user.ResponseCreateAccount": {
            "type": "object"
        },
        "user.ResponseGetUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/user.ResponseGetUserData"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "user.ResponseGetUserData": {
            "type": "object",
            "properties": {
                "bio": {
                    "type": "string"
                },
                "confirmed_at": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "dashboards": {
                    "type": "integer"
                },
                "discord": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encrypted_password": {
                    "type": "string"
                },
                "github": {
                    "type": "string"
                },
                "icon_url": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "queries": {
                    "type": "integer"
                },
                "stars": {
                    "type": "integer"
                },
                "telgram": {
                    "type": "string"
                },
                "twitter": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "user.ResponseLogin": {
            "type": "object",
            "properties": {
                "algorithm": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "user.ResponseUpdateUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/datamodel.UserModel"
                },
                "errorCode": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
